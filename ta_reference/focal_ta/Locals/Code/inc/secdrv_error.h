/** @addtogroup SECDRV
 * @{
 * Basic driver functions error codes.
 *
 * Copyright (c) 2012 Samsung Electronics Co., Ltd.
 */
#ifndef __SECDRV_ERROR_H__
#define __SECDRV_ERROR_H__

typedef enum {
	SECDRV_OK				= 0x00000,
	E_SECDRV_INITIALIZATION			= 0x40001,
	E_SECDRV_FINALIZATION			= 0x40002,
	E_SECDRV_ATTACH_CRYPTO_HW		= 0x40003,
	E_SECDRV_DETACH_CRYPTO_HW		= 0x40004,
	E_SECDRV_AES_CIPHER			= 0x40005,
	E_SECDRV_START_CONTENT_PATH_PROTECTION	= 0x40006,
	E_SECDRV_STOP_CONTENT_PATH_PROTECTION	= 0x40007,
	E_SECDRV_LOAD_MFC_FW			= 0x40008,
	E_SECDRV_LOAD_VIDEO_DATA		= 0x40009,
	E_SECDRV_SYSMMU_INIT			= 0x4000A,
	E_SECDRV_SYSMMU_EXIT			= 0x4000B,
	E_SECDRV_TZPC_INIT			= 0x4000C,
	E_SECDRV_TZPC_EXIT			= 0x4000D,
	E_SECDRV_TZASC_INIT			= 0x4000E,
	E_SECDRV_TZASC_EXIT			= 0x4000F,
	E_SECDRV_OUT_OF_SECURE_RANGE		= 0x40010,
	E_SECDRV_OUT_OF_NONSECURE_RANGE		= 0x40011,

	E_SECDRV_I2C_INVALID_CHANNEL		= 0x40030,
	E_SECDRV_I2C_TRANSFER_INVALID_DATA	= 0x40031,
	E_SECDRV_I2C_TIMEOUT			= 0x40032,
	E_SECDRV_I2C_GPIO_SET			= 0x40033,
	E_SECDRV_I2C_CLOCKRATE_SET		= 0x40034,
	E_SECDRV_I2C_READ_FAILED		= 0x40035,
	E_SECDRV_I2C_WRITE_FAILED		= 0x40036,

	E_SECDRV_SPI_INVALID_CHANNEL		= 0x40050,
	E_SECDRV_SPI_TRANSFER_INVALID_DATA	= 0x40051,
	E_SECDRV_SPI_TIMEOUT			= 0x40052,
	E_SECDRV_SPI_GPIO_SET			= 0x40053,
	E_SECDRV_SPI_CLOCKRATE_SET		= 0x40054,
	E_SECDRV_SPI_INIT_FAILED		= 0x40055,
	E_SECDRV_SPI_DMA_INIT_FAILED		= 0x40056,
	E_SECDRV_SPI_READ_FAILED		= 0x40057,
	E_SECDRV_SPI_WRITE_FAILED		= 0x40058,
	E_SECDRV_SPI_WRITE_READ_FAILED		= 0x40059,
	E_SECDRV_SPI_CLOCK_INIT_FAILED		= 0x40060,
	E_SECDRV_SPI_CLOCK_ENABLE_FAILED	= 0x40061,
	E_SECDRV_SPI_CLOCK_DISABLE_FAILED	= 0x40062,

	E_SECDRV_DMA_TEST_FAILED		= 0x40063,

} secDrvResult_t;

typedef enum {
	SW_CRYPTO_OK				= 0x00000,
	E_SW_CRYPTO_INVALID_OFFSET		= 0x50001,
	E_SW_CRYPTO_INVALID_LENGTH		= 0x50002,
	E_SW_CRYPTO_INVAILD_IV_LEN		= 0x50003,
	E_SW_CRYPTO_INVAILD_KEY_LEN		= 0x50004,
	E_SW_CRYPTO_INVAILD_DATA		= 0x50005,
	E_SW_CRYPTO_AES_SET_ALGO		= 0x50006,
	E_SW_CRYPTO_AES_ECB_INIT		= 0x50007,
	E_SW_CRYPTO_AES_ECB_UPDATE		= 0x50008,
	E_SW_CRYPTO_AES_ECB_FINAL		= 0x50009,
	E_SW_CRYPTO_AES_CBC_INIT		= 0x5000A,
	E_SW_CRYPTO_AES_CBC_UPDATE		= 0x5000B,
	E_SW_CRYPTO_AES_CBC_FINAL		= 0x5000C,
	E_SW_CRYPTO_ENCRYPT			= 0x5000D,
	E_SW_CRYPTO_DECRYPT			= 0x5000E,
} swCryptoResult_t;

#if defined(CONFIG_SMDK4x12)
typedef enum {
	NO_ATTACK				= 0x00000,
	E_DETECT_ATTACK_SYSMMU_DISABLE          = 0x60001,
	E_DETECT_ATTACK_FIMD_WB_TO_NS_GSCL      = 0x60002,
	E_DETECT_ATTACK_HDCP_DISABLE            = 0x60004,
	E_DETECT_ATTACK_NO_LOCAL_PATH           = 0x60008,
} detectAttack_t;
#endif

#if defined(CONFIG_SMDK5250) || defined(CONFIG_SMDK5410)
typedef enum {
	NO_ATTACK				= 0x00000,
	E_SECDRV_MFC_PWR_DISABLE		= 0x60002,
	E_SECDRV_GSC0_PWR_DISABLE		= 0x60003,
	E_SECDRV_GSC0_CLK_DISABLE		= 0x60004,
	E_SECDRV_GSC0_SMMU_CLK_DISABLE		= 0x60005,
	E_SECDRV_GSC0_SMMU_DISABLE		= 0x60006,
	E_SECDRV_GSC3_PWR_DISABLE		= 0x60007,
	E_SECDRV_GSC3_CLK_DISABLE		= 0x60008,
	E_SECDRV_GSC3_SMMU_CLK_DISABLE		= 0x60009,
	E_SECDRV_GSC3_SMMU_DISABLE		= 0x6000A,
	E_SECDRV_WB_TO_NON_SECURE_GSCALER	= 0x6000B,
	E_SECDRV_HDMI_WITH_HDCP_DISABLED	= 0x6000C,
	E_SECDRV_NO_GSC3_LOCAL_PATH		= 0x6000E,
} detectAttack_t;
#endif

#endif /* __SECDRV_ERROR_H__ */

/** @} */
